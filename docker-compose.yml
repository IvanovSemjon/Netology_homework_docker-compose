version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: stocks_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: stocks_db
      POSTGRES_USER: stocks_user
      POSTGRES_PASSWORD: secure_password_change_in_production
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - stocks_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U stocks_user -d stocks_db"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
      - /var/run/postgresql

  backend:
    build: .
    container_name: stocks_backend
    restart: unless-stopped
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=${DEBUG:-0}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-localhost,127.0.0.1,nginx}
      # - DATABASE_URL=postgresql://stocks_user:secure_password_change_in_production@postgres:5432/stocks_db
    volumes:
      - static_volume:/app/staticfiles
      - db_volume:/app
    networks:
      - stocks_network
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "python", "manage.py", "check", "--deploy"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp

  nginx:
    image: nginx:1.25-alpine
    container_name: stocks_nginx
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - static_volume:/app/staticfiles:ro
    networks:
      - stocks_network
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /var/cache/nginx
      - /var/run

volumes:
  postgres_data:
    driver: local
  static_volume:
    driver: local
  db_volume:
    driver: local

networks:
  stocks_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16